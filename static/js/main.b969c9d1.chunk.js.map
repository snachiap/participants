{"version":3,"sources":["logo.svg","store/actions/participant.actions.js","store/reducer/participant.reducer.js","store/reducer/index.js","components/appbar/SampleAppBar.js","components/header/SampleHeader.js","services/participant.service.js","components/participants/ParticipantEdit.js","components/participants/ParticipantView.js","components/participants/ParticipantList.js","components/signup/Signup.js","container/SampleContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setEditing","id","type","payload","INIT_STATE","participants","name","email","phoneNumber","map","d","short","generate","editId","sort","sortBy","sortOrder","reducers","combineReducers","state","action","remaining","filter","p","useStyles","makeStyles","theme","root","backgroundColor","boxShadow","toolBar","padding","icon","paddingRight","SampleAppBar","classes","AppBar","position","className","Toolbar","src","logo","alt","width","height","Typography","variant","titleContainer","marginTop","marginBottom","title","color","fontSize","fontWeight","SampleHeader","isValidParticipant","participant","isValidName","isValidEmail","isValidPhone","length","test","phone","rowContainer","cellContainer","borderRadius","transform","actionCellContainer","saveButton","background","cancelButton","marginRight","addButton","ParticipantEdit","selected","dispatch","useDispatch","useState","setParticipant","touched","setTouched","onChange","key","value","TableRow","TableCell","TextField","error","style","size","label","onBlur","e","target","Grid","container","direction","item","Button","disabled","onClick","update","add","iconButton","ParticipantView","IconButton","remove","table","tablehead","paddingLeft","paddingTop","paddingBottom","columns","field","ParticipantList","useSelector","sorted","_","reverse","TableContainer","component","Paper","Table","aria-label","TableHead","column","TableSortLabel","active","align","TableBody","Signup","onSuccess","username","setUserName","password","setPassword","setError","alignItems","justify","bodyContainer","participantAddBlock","SampleContainer","loggedIn","setloggedIn","composeEnhancers","compose","store","createStore","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b969c9d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e8a96df5.svg\";","export const ADD = 'ADD';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const SORT = 'SORT';\nexport const SET_EDIT = 'SET_EDIT';\n\nconst add = participant => ({\n  type: ADD,\n  payload: participant\n});\n\nconst remove = id => ({\n  type: DELETE,\n  payload: id\n});\n\nconst update = participant => ({\n  type: UPDATE,\n  payload: participant\n});\n\nconst setsorting = sortSpec => ({\n  type: SORT,\n  payload: sortSpec\n});\n\nconst setEditing = id => ({\n  type: SET_EDIT,\n  payload: id\n});\n\nexport { add, remove, update, setsorting, setEditing };\n","import short from 'short-uuid';\nimport { ADD, DELETE, UPDATE, SORT, SET_EDIT } from '../actions/participant.actions';\n\nconst data = [\n  { name: 'Adrienne', email: 'akairns0@hc360.com', phoneNumber: '703266043747' },\n  { name: 'Susie', email: 'sdufour1@desdev.cn', phoneNumber: '792902056101' },\n  { name: 'Taddeo', email: 'tcuppleditch2@diigo.com', phoneNumber: '757983148156' },\n  { name: 'Malvina', email: 'morriss3@dot.gov', phoneNumber: '397654113397' },\n  { name: 'Erina', email: 'ejaycock4@npr.org', phoneNumber: '268311638741' },\n  { name: 'Boniface', email: 'bpetrello5@last.fm', phoneNumber: '302470577032' },\n  { name: 'Odo', email: 'otodeo6@earthlink.net', phoneNumber: '603804724391' },\n  { name: 'Yehudi', email: 'ypreece7@t.co', phoneNumber: '534610310626' },\n  { name: 'Eulalie', email: 'emckeller8@phoca.cz', phoneNumber: '269221837140' },\n  { name: 'Birdie', email: 'bfullard9@icq.com', phoneNumber: '755094733260' },\n  { name: 'Raynell', email: 'rcroxleya@aol.com', phoneNumber: '872059313917' },\n  { name: 'Shaylyn', email: 'shanrattyb@acquirethisname.com', phoneNumber: '924337232680' },\n  { name: 'Ollie', email: 'olawc@skype.com', phoneNumber: '150110684043' },\n  { name: 'Tab', email: 'tringed@macromedia.com', phoneNumber: '656006820146' },\n  { name: 'Frannie', email: 'fpiepere@netscape.com', phoneNumber: '074785549925' },\n  { name: 'Robyn', email: 'rsterref@cargocollective.com', phoneNumber: '541799039052' },\n  { name: 'Ettore', email: 'ecaberasg@delicious.com', phoneNumber: '913727837088' },\n  { name: 'Arabella', email: 'aghiraldih@pen.io', phoneNumber: '699893638774' },\n  { name: 'Jocko', email: 'jbudgeni@ycombinator.com', phoneNumber: '071745948204' },\n  { name: 'Easter', email: 'egeorgesonj@craigslist.org', phoneNumber: '714129278484' }\n];\n\nconst INIT_STATE = {\n  participants: data.map(d => ({ ...d, id: short.generate() })),\n  editId: '',\n  sort: {\n    sortBy: 'name',\n    sortOrder: 'asc'\n  }\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD: {\n      return { ...state, participants: [...state.participants, { ...action.payload, id: short.generate() }] };\n    }\n\n    case DELETE: {\n      const remaining = state.participants.filter(p => p.id !== action.payload);\n      return { ...state, participants: remaining };\n    }\n\n    case UPDATE: {\n      const remaining = state.participants.filter(p => p.id !== action.payload.id);\n      return { ...state, participants: [...remaining, action.payload], editId: '' };\n    }\n\n    case SORT: {\n      return { ...state, sort: action.payload };\n    }\n\n    case SET_EDIT: {\n      return { ...state, editId: action.payload };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport participantReducer from './participant.reducer';\n\nconst reducers = combineReducers({\n  participants: participantReducer\n});\n\nexport default reducers;\n","import React from 'react';\nimport { makeStyles, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport logo from '../../logo.svg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#ACB5BC',\n    boxShadow: 'none'\n  },\n  toolBar: {\n    padding: 32\n  },\n  icon: {\n    paddingRight: 32\n  }\n}));\n\nconst SampleAppBar = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar className={classes.toolBar}>\n        <img src={logo} className={classes.icon} alt=\"logo\" width=\"32\" height=\"32\" />\n        <Typography id=\"app-header-text\" variant=\"h4\">Nord Software</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default SampleAppBar;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport { Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  titleContainer: {\n    marginTop: 30,\n    marginBottom: 30\n  },\n  title: {\n    color: '#757575',\n    fontSize: 30,\n    fontWeight: 500\n  }\n}));\n\nconst SampleHeader = ({ title }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.titleContainer}>\n      <Typography className={classes.title}>{title}</Typography>\n    </div>\n  );\n};\n\nexport default SampleHeader;\n\nSampleHeader.propTypes = {\n  title: Proptypes.string.isRequired\n};\n","export const isValidParticipant = participant => {\n  const { name, email, phoneNumber } = participant;\n\n  return isValidName(name) && isValidEmail(email) && isValidPhone(phoneNumber);\n};\n\nexport const isValidName = name => {\n  return name.length > 0;\n};\n\nexport const isValidEmail = email => {\n  return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email);\n};\n\nexport const isValidPhone = phone => {\n  return phone.length > 5;\n};\n","import React, { useState } from 'react';\nimport { makeStyles, TableRow, TableCell, TextField, Grid, Button } from '@material-ui/core';\nimport { isValidName, isValidEmail, isValidPhone, isValidParticipant } from '../../services/participant.service';\nimport { useDispatch } from 'react-redux';\nimport { setEditing, update, add } from '../../store/actions/participant.actions';\n\nconst useStyles = makeStyles(theme => ({\n  rowContainer: {\n    height: 72\n  },\n  cellContainer: {\n    padding: 16,\n    paddingRight: 0,\n    '& .MuiFilledInput-root': {\n      height: 40,\n      fontSize: 14,\n      borderRadius: 0\n    },\n    '& .MuiInputLabel-filled': {\n      fontSize: 14,\n      transform: 'translate(17px, 13px) scale(1)'\n    }\n  },\n  actionCellContainer: {\n    width: '100%'\n  },\n  saveButton: {\n    background: '#07f',\n    borderRadius: 0,\n    boxShadow: 'none',\n    color: '#ffffff',\n    height: 40\n  },\n  cancelButton: {\n    color: '#07f',\n    background: '#EDEDED',\n    borderRadius: 0,\n    boxShadow: 'none',\n    marginRight: 5,\n    height: 40\n  },\n  addButton: {\n    borderRadius: 0,\n    boxShadow: 'none',\n    height: 40\n  }\n}));\n\nconst ParticipantEdit = ({ selected }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [participant, setParticipant] = useState(selected);\n  const [touched, setTouched] = useState({});\n\n  const onChange = (key, value) => {\n    setParticipant({ ...participant, [key]: value });\n  };\n\n  const addParticipant = () => {\n    dispatch(add(participant));\n    setTouched({});\n    setParticipant({ name: '', email: '', phoneNumber: '' });\n  };\n\n  const { name, email, phoneNumber, id } = participant;\n  return (\n    <TableRow className={classes.rowContainer}>\n      <TableCell className={classes.cellContainer}>\n        <TextField\n          error={touched.name && !isValidName(name)}\n          style={{ width: 180 }}\n          variant=\"filled\"\n          size=\"small\"\n          label=\"Full Name\"\n          value={name}\n          onBlur={() => setTouched({ ...touched, name: true })}\n          onChange={e => onChange('name', e.target.value)}\n        ></TextField>\n      </TableCell>\n      <TableCell className={classes.cellContainer}>\n        <TextField\n          error={touched.email && !isValidEmail(email)}\n          style={{ width: 300 }}\n          variant=\"filled\"\n          size=\"small\"\n          label=\"E-mail address\"\n          value={email}\n          onBlur={() => setTouched({ ...touched, email: true })}\n          onChange={e => onChange('email', e.target.value)}\n        ></TextField>\n      </TableCell>\n      <TableCell className={classes.cellContainer}>\n        <TextField\n          error={touched.phoneNumber && !isValidPhone(phoneNumber)}\n          style={{ width: 180 }}\n          variant=\"filled\"\n          size=\"small\"\n          type=\"number\"\n          label=\"Phone Number\"\n          value={phoneNumber}\n          onBlur={() => setTouched({ ...touched, phoneNumber: true })}\n          onChange={e => onChange('phoneNumber', e.target.value)}\n        ></TextField>\n      </TableCell>\n      {id ? (\n        <TableCell className={classes.actionCellContainer}>\n          <Grid container direction=\"row-reverse\">\n            <Grid item>\n              <Button\n                disabled={!isValidParticipant(participant)}\n                className={classes.saveButton}\n                onClick={() => dispatch(update(participant))}\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button className={classes.cancelButton} onClick={() => dispatch(setEditing(''))}>\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </TableCell>\n      ) : (\n        <TableCell className={classes.actionCellContainer}>\n          <Grid container direction=\"row-reverse\">\n            <Grid item>\n              <Button\n                disabled={!isValidParticipant(participant)}\n                className={classes.addButton}\n                onClick={addParticipant}\n                variant=\"contained\"\n              >\n                ADD NEW\n              </Button>\n            </Grid>\n          </Grid>\n        </TableCell>\n      )}\n    </TableRow>\n  );\n};\n\nexport default ParticipantEdit;\n","import React from 'react';\nimport { makeStyles, TableRow, TableCell, Grid, IconButton, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { useDispatch } from 'react-redux';\nimport { remove, setEditing } from '../../store/actions/participant.actions';\n\nconst useStyles = makeStyles(theme => ({\n  rowContainer: {\n    height: 72\n  },\n  cellContainer: {\n    padding: 24,\n    paddingRight: 0,\n    fontSize: 16,\n    height: 24,\n    color: '#505050',\n    fontWeight: 400\n  },\n  iconButton: {\n    padding: 0,\n    marginRight: 15\n  }\n}));\n\nconst ParticipantView = ({ selected }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { name, email, phoneNumber, id } = selected;\n  return (\n    <TableRow className={classes.rowContainer}>\n      <TableCell className={classes.cellContainer} style={{ width: 180 }}>\n        <Typography>{name}</Typography>\n      </TableCell>\n      <TableCell className={classes.cellContainer} style={{ width: 300 }}>\n        <Typography>{email}</Typography>\n      </TableCell>\n      <TableCell className={classes.cellContainer} style={{ width: 180 }}>\n        <Typography>{phoneNumber}</Typography>\n      </TableCell>\n      <TableCell>\n        <Grid container direction=\"row-reverse\">\n          <Grid item>\n            <IconButton className={classes.iconButton} onClick={() => dispatch(remove(id))}>\n              <DeleteIcon />\n            </IconButton>\n          </Grid>\n          <Grid item>\n            <IconButton className={classes.iconButton} onClick={() => dispatch(setEditing(id))}>\n              <CreateIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default ParticipantView;\n","import React from 'react';\nimport {\n  TableContainer,\n  Table,\n  Paper,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  TableBody\n} from '@material-ui/core';\nimport _ from 'lodash';\n\nimport { makeStyles } from '@material-ui/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setsorting } from '../../store/actions/participant.actions';\nimport ParticipantEdit from './ParticipantEdit';\nimport ParticipantView from './ParticipantView';\n\nconst useStyles = makeStyles({\n  table: {\n    width: 912\n  },\n  container: {\n    borderRadius: 0,\n    boxShadow: 'unset'\n  },\n  tablehead: {\n    paddingLeft: 24,\n    paddingRight: 24,\n    paddingTop: 0,\n    paddingBottom: 0,\n    height: 48,\n    fontSize: 14,\n    color: '#757575',\n    fontWeight: 500\n  }\n});\n\nconst columns = [\n  {\n    field: 'name',\n    label: 'Full Name'\n  },\n  {\n    field: 'email',\n    label: 'E-mail address'\n  },\n  {\n    field: 'phoneNumber',\n    label: 'Phone Number'\n  }\n];\n\nconst ParticipantList = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const { participants, editId, sort } = useSelector(state => state.participants);\n  const { sortBy, sortOrder } = sort;\n\n  const updateSorting = field => {\n    dispatch(\n      setsorting({\n        sortBy: field,\n        sortOrder: sortOrder === 'asc' ? 'desc' : 'asc'\n      })\n    );\n  };\n\n  const sorted = sortOrder === 'asc' ? _.sortBy(participants, sortBy) : _.reverse(_.sortBy(participants, sortBy));\n\n  return (\n    <TableContainer component={Paper} className={classes.container}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            {columns.map(column => (\n              <TableCell className={classes.tablehead} key={column.field}>\n                <TableSortLabel\n                  active={sortBy === column.field}\n                  direction={sortBy === column.field ? sortOrder : 'asc'}\n                  onClick={() => updateSorting(column.field)}\n                >\n                  {column.label}\n                </TableSortLabel>\n              </TableCell>\n            ))}\n            <TableCell className={classes.tablehead} align=\"left\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sorted.map(p =>\n            p.id === editId ? <ParticipantEdit selected={p} key={p.id} /> : <ParticipantView selected={p} key={p.id} />\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ParticipantList;\n","import React, { useState } from 'react';\nimport { Grid, TextField, Button, Typography } from '@material-ui/core';\n\nconst Signup = ({ onSuccess }) => {\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const login = () => {\n    if (username === 'admin' && password === 'admin123') onSuccess();\n    else setError('Invalid Login Credentials');\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ height: '100vh' }}>\n      <Grid item style={{ padding: 10 }}>\n        <TextField\n          style={{ width: 300 }}\n          variant=\"outlined\"\n          id=\"app-username\"\n          size=\"small\"\n          label=\"Username\"\n          value={username}\n          onChange={e => setUserName(e.target.value)}\n        ></TextField>\n      </Grid>\n      <Grid item style={{ padding: 10 }}>\n        <TextField\n          style={{ width: 300 }}\n          variant=\"outlined\"\n          id=\"app-password\"\n          size=\"small\"\n          type=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        ></TextField>\n      </Grid>\n\n      <Grid item style={{ padding: 10 }}>\n        <Button style={{ width: 100 }} onClick={login} id=\"app-login-button\">\n          Login\n        </Button>\n      </Grid>\n\n      {error.length > 0 ? (\n        <Grid item style={{ padding: 10 }}>\n          <Typography variant=\"body2\" color=\"error\" id=\"app-login-error\">\n            {error}\n          </Typography>\n        </Grid>\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React, { useState, Fragment } from 'react';\nimport { makeStyles, Grid, Table, TableBody } from '@material-ui/core';\nimport SampleAppBar from '../components/appbar/SampleAppBar';\nimport SampleHeader from '../components/header/SampleHeader';\nimport ParticipantEdit from '../components/participants/ParticipantEdit';\nimport ParticipantList from '../components/participants/ParticipantList';\nimport Signup from '../components/signup/Signup';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#F1F1F1'\n  },\n  bodyContainer: {\n    width: 912\n  },\n  participantAddBlock: {\n    marginBottom: 20\n  }\n}));\n\nconst SampleContainer = () => {\n  const classes = useStyles();\n\n  const [loggedIn, setloggedIn] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      {loggedIn ? (\n        <Fragment>\n          <SampleAppBar />\n          <Grid container alignItems=\"center\" justify=\"center\">\n            <Grid item className={classes.bodyContainer}>\n              <SampleHeader title=\"List of participants\" />\n              <Table className={classes.participantAddBlock}>\n                <TableBody style={{ background: '#ffffff' }}>\n                  <ParticipantEdit selected={{ name: '', email: '', phoneNumber: '' }} />\n                </TableBody>\n              </Table>\n\n              <ParticipantList />\n            </Grid>\n          </Grid>\n        </Fragment>\n      ) : (\n        <Signup onSuccess={() => setloggedIn(true)} />\n      )}\n    </div>\n  );\n};\n\nexport default SampleContainer;\n","import React from 'react';\nimport { createStore, compose } from 'redux';\nimport reducers from './store/reducer';\nimport { Provider } from 'react-redux';\nimport SampleContainer from './container/SampleContainer';\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Additional Extensions\n      })\n    : compose;\n\nconst store = createStore(reducers, composeEnhancers());\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SampleContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}